{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_wallet_d_i_d"
      ],
      "properties": {
        "get_wallet_d_i_d": {
          "type": "object",
          "required": [
            "wallet"
          ],
          "properties": {
            "wallet": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_username_d_i_d"
      ],
      "properties": {
        "get_username_d_i_d": {
          "type": "object",
          "required": [
            "username"
          ],
          "properties": {
            "username": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_d_i_d"
      ],
      "properties": {
        "get_d_i_d": {
          "type": "object",
          "required": [
            "did"
          ],
          "properties": {
            "did": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_merkle_root"
      ],
      "properties": {
        "get_merkle_root": {
          "type": "object",
          "required": [
            "did"
          ],
          "properties": {
            "did": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "verify_credential"
      ],
      "properties": {
        "verify_credential": {
          "type": "object",
          "required": [
            "credential_hash",
            "did",
            "merkle_proofs"
          ],
          "properties": {
            "credential_hash": {
              "type": "string"
            },
            "did": {
              "type": "string"
            },
            "merkle_proofs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "is_subscriber"
      ],
      "properties": {
        "is_subscriber": {
          "type": "object",
          "required": [
            "subscriber_wallet",
            "target_did"
          ],
          "properties": {
            "subscriber_wallet": {
              "type": "string"
            },
            "target_did": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_subscription_price"
      ],
      "properties": {
        "get_subscription_price": {
          "type": "object",
          "required": [
            "did"
          ],
          "properties": {
            "did": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_subscription_duration"
      ],
      "properties": {
        "get_subscription_duration": {
          "type": "object",
          "required": [
            "did"
          ],
          "properties": {
            "did": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_subscription_info"
      ],
      "properties": {
        "get_subscription_info": {
          "type": "object",
          "required": [
            "did",
            "subscriber"
          ],
          "properties": {
            "did": {
              "type": "string"
            },
            "subscriber": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_subscriber_list"
      ],
      "properties": {
        "get_subscriber_list": {
          "type": "object",
          "required": [
            "page",
            "page_size",
            "wallet"
          ],
          "properties": {
            "page": {
              "$ref": "#/definitions/Uint64"
            },
            "page_size": {
              "$ref": "#/definitions/Uint64"
            },
            "wallet": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    }
  }
}
